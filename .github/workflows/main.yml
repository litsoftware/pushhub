name: build docker image

on:
  push:
    branches:
      - master
      - development
      - main

env:
  IMAGE_NS_PRODUCTION: justap
  IMAGE_NS_DEVELOPMENT: justap_development

  FPM_IMAGE_NAME: litnotifier-fpm
  NGINX_IMAGE_NAME: litnotifier-nginx
  CLI_IMAGE_NAME: litnotifier-cli

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          if [ "refs/heads/master" == "${{ github.ref }}" ] || [ "refs/heads/main" == "${{ github.ref }}" ]; then
            export IMAGE_NS="${IMAGE_NS_PRODUCTION}"
          else
            export IMAGE_NS="${IMAGE_NS_DEVELOPMENT}"
          fi

          # docker login
          echo "${{ secrets.ALIYUN_REGISTRY_PASWORD }}" | docker login --username=${{ secrets.ALIYUN_REGISTRY_USERNAME }} ${{ secrets.ALIYUN_REGISTRY_URL }} --password-stdin

          # generate image
          # fpm
          export IMAGE_FPM="${{ secrets.ALIYUN_REGISTRY_URL }}/${IMAGE_NS}/${FPM_IMAGE_NAME}:0.1.${GITHUB_RUN_NUMBER}"
          export IMAGE_FPM_LATEST="${{ secrets.ALIYUN_REGISTRY_URL }}/${IMAGE_NS}/${FPM_IMAGE_NAME}:latest"
          docker build -t $IMAGE_FPM -t $IMAGE_FPM_LATEST --target fpm .

          # cli
          export IMAGE_CLI="${{ secrets.ALIYUN_REGISTRY_URL }}/${IMAGE_NS}/${CLI_IMAGE_NAME}:0.1.${GITHUB_RUN_NUMBER}"
          export IMAGE_CLI_LATEST="${{ secrets.ALIYUN_REGISTRY_URL }}/${IMAGE_NS}/${CLI_IMAGE_NAME}:latest"
          docker build -t $IMAGE_CLI -t $IMAGE_CLI_LATEST  --target cli .

          # nginx
          export IMAGE_NGINX="${{ secrets.ALIYUN_REGISTRY_URL }}/${IMAGE_NS}/${NGINX_IMAGE_NAME}:0.1.${GITHUB_RUN_NUMBER}"
          export IMAGE_NGINX_LATEST="${{ secrets.ALIYUN_REGISTRY_URL }}/${IMAGE_NS}/${NGINX_IMAGE_NAME}:latest"
          docker build -t $IMAGE_NGINX -t $IMAGE_NGINX_LATEST  --target web .

          # list images
          docker images

          # push images
          docker push $IMAGE_FPM
          docker push $IMAGE_FPM_LATEST

          docker push $IMAGE_CLI
          docker push $IMAGE_CLI_LATEST

          docker push $IMAGE_NGINX
          docker push $IMAGE_NGINX_LATEST
